group = 'com.billing'
version = '0.0.1-SNAPSHOT'
 
apply plugin: 'base'
apply plugin: 'eclipse'
apply plugin: 'idea'
 
buildscript {
    repositories {
        jcenter()
        
        dependencies {
            classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}"
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        }
    }
    
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}"
    }
}
 
 
allprojects {
    repositories {
        jcenter()
    }

    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom "io.spring.platform:platform-bom:${springIoVersion}"

            mavenBom "org.springframework.cloud:spring-cloud-starter-parent:$cloudStarterBomVersion"
        }
    }
}
 
task wrapper(type: Wrapper) {
 gradleVersion = '2.9'
}
 
subprojects { subproject ->
    apply plugin: 'java'
    apply plugin: 'spring-boot'
    
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
 
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
 
    repositories {
        jcenter()
    }
 
    dependencies {
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
 
    task initSourceFolders {
        subproject.sourceSets*.java.srcDirs*.each {
            if( !it.exists() ) {
                it.mkdirs()
            }
        }
 
        subproject.sourceSets*.resources.srcDirs*.each {
            if( !it.exists() ) {
                it.mkdirs()
            }
        }
    }
}
