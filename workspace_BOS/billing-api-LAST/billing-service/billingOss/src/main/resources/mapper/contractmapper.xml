<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.api.repository.ContractRepository">

<resultMap id="productList" type="com.api.model.contract.ContractInsert"> 
	<result property="productGroupCode" column="productgroupcode"/> 
	<result property="productGroupId" column="productgroupid"/> 
	<result property="productGroupName" column="productgroupname"/> 
	<result property="productDescription" column="productdescription"/> 
	<result property="productImageUrl" column="productimageurl"/> 
	<result property="priceAmount" column="priceamount"/> 
</resultMap>
<select id="getProductList" resultMap="productList"  parameterType = "ContractInsert" >
select a.code as productgroupcode, a.value1 as productgroupid, a.optioncode as productgroupname, a.description as productdescription, a.optionvalue1 as productimageurl, a.value2 as priceamount
from   providerinformation a
where  a.providernumber = #{providerNumber}
and    a.code = #{productGroupCode}
and    a.detailcode = #{channelId}
and    date_format(curdate(),'%Y%m%d') between a.effectstartdate and a.effectenddate
</select>

<resultMap id="discountList" type="com.api.model.contract.ContractInsert"> 
	<result property="discountId" column="discountid"/> 
	<result property="discountName" column="discountname"/> 
	<result property="discountType" column="discounttype"/> 
	<result property="discountValue" column="discountvalue"/> 
	<result property="discountOrder" column="discountorder"/> 
	<result property="discountType2" column="discounttype2"/> 
	<result property="discountType2Value" column="discounttype2value"/> 
	<result property="discountTarget" column="discounttarget"/> 
	<result property="discountDescription" column="discountdescription"/> 
	<result property="couponDiscountId" column="coupondiscountid"/> 
	<result property="couponDiscountYn" column="coupondiscountyn"/> 
</resultMap>
<select id="getDiscountList" resultMap="discountList"  parameterType = "ContractInsert" >
<![CDATA[
select a.discountid, a.discountname, a.discounttype, a.discounttarget, a.discountvalue, a.discounttype2, a.discounttype2value, a.discountorder, a.discountdescription, 
       c.value1 as couponDiscountId, if((sum(if(isnull(c.value1)=1,0,1)) over())=1,'Y','N') as couponDiscountYn
from   discount a left outer join providerinformation c on (c.providernumber = a.providernumber and c.code = 'COUPON' and c.detailcode = #{channelId} 
                                                            and c.value1 = a.discountid and date_format(now(),'%Y%m%d') between c.effectstartdate and c.effectenddate)
where  a.providernumber = #{providerNumber}
and    date_format(now(),'%Y%m%d') between a.subscribestartdatetime and a.subscribeenddatetime
and    a.discountstate = 'OPERATION'
and   (a.discounttarget = 'CONTRACT' 
    or exists (select 'x' from productdiscount b
               where  b.providernumber = a.providernumber
               and    b.discountid = a.discountid
               and    b.productid = #{productId}
               and    date_format(now(),'%Y%m%d') between b.subscribestartdatetime and b.subscribeenddatetime))
and    a.discountapplycount >= 1            
order by if(a.discounttarget='PRODUCT',0,1), if(substr(a.discounttype,1,6)='AMOUNT',0,1), a.discountorder
]]>
</select>

<resultMap id="product" type="com.api.model.contract.ContractInsert"> 
	<result property="productId" column="productid"/> 
	<result property="productName" column="productName"/> 
	<result property="priceAmount" column="priceamount"/> 
	<result property="productDescription" column="productdescription"/> 
	<result property="productImageUrl" column="productimageurl"/> 
	<result property="duration" column="duration"/> 
	<result property="optionYn" column="optionyn"/> 
</resultMap>
<select id="getProduct" resultMap="product"  parameterType = "ContractInsert" >
select a.productid, a.productname, a.priceamount, a.productdescription, optionvalue2 as productimageurl, if(b.value2='',0,value2) as duration, optionyn
from   product a, providerinformation b
where  a.productid = #{productId}
and    a.providernumber = b.providernumber
and    b.code = 'SALEPRODUCT'
and    b.detailcode = #{channelId}
and    a.productid = b.value1
</select>

<resultMap id="productListByGroup" type="com.api.model.contract.ContractInsert"> 
	<result property="productId" column="productid"/> 
	<result property="productName" column="productName"/> 
	<result property="priceAmount" column="priceamount"/> 
	<result property="productDescription" column="productdescription"/> 
	<result property="productImageUrl" column="productimageurl"/> 
	<result property="duration" column="duration"/> 
	<result property="optionYn" column="optionyn"/> 
</resultMap>
<select id="getProductListByGroup" resultMap="productListByGroup"  parameterType = "ContractInsert" >
select b.productid, b.productname, b.priceamount, b.productdescription, a.optionvalue1 as productimageurl, if(a.value2='',0,value2) as duration, b.optionyn
from   providerinformation a, product b
where  a.providernumber = #{providerNumber}
and    a.code = 'SALEPRODUCT'
and    a.detailcode = #{channelId}
and    a.optioncode = #{productGroupId}
and    date_format(now(),'%Y%m%d') between a.effectstartdate and a.effectenddate
and    a.value1 = b.productid
order by a.value2
</select>

<resultMap id="addressid" type="com.api.model.contract.ContractInsert"> 
	<result property="addressId" column="addressid"/> 
</resultMap>
<select id="getAddressid" resultType="ContractInsert">
SELECT concat('ADD',nextval(addressid_seq)) as addressid
</select>

<insert id="createDeliveryAddress">
INSERT 
INTO   address
       (
          addressid
		    , zipcode
		    , baseaddress
		    , detailaddress
		    , auditid
		    , auditdatetime
		  )
VALUES (
          #{addressId}
        , #{zipCode}
        , #{baseAddress}
        , #{detailAddress}
        , #{auditId}
        , NOW()
        )
</insert>

<resultMap id="customerNumber" type="com.api.model.contract.ContractInsert"> 
	<result property="customerNumber" column="customernumber"/> 
	<result property="customerName" column="customername"/> 
	<result property="phoneNumber" column="phonenumber"/> 
	<result property="email" column="email"/> 
</resultMap>
<select id="getCustomerNumber" resultMap="customerNumber"  parameterType = "ContractInsert">
select customernumber, customername, phonenumber, email
from   customer a
where  a.providernumber = #{providerNumber}
and    a.channelid = #{channelId}
and    a.channelcustomernumber = #{channelCustomerNumber}
and    a.customername = #{customerName}
and    a.phonenumber = #{phoneNumber}
</select>

<insert id="insertCustomer" useGeneratedKeys="true" keyProperty="customerNumber">
insert into customer (customername,providernumber,sex,birthday,email,phonenumber,addressid,
                      deliveryaddressid,customertype,createdate,currentdate,deletedate,cellphonenumber,channelid,channelcustomernumber,auditid,auditdatetime)
values (#{customerName},#{providerNumber},'','',nvl(#{email},''),#{phoneNumber},#{addressId},
        #{addressId},'',date_format(curdate(),'%Y%m%d'),date_format(curdate(),'%Y%m%d'),'',#{phoneNumber},#{channelId},#{channelCustomerNumber},#{auditId},now())
</insert>

<insert id="insertDeliveryCustomer" useGeneratedKeys="true" keyProperty="deliveryCustomerNumber">
insert into customer (customername,providernumber,sex,birthday,email,phonenumber,addressid,
                      deliveryaddressid,customertype,createdate,currentdate,deletedate,cellphonenumber,channelid,channelcustomernumber,auditid,auditdatetime)
values (#{deliveryCustomerName},#{providerNumber},'','',nvl(#{deliveryEmail},''),#{deliveryPhoneNumber},#{addressId},
        #{addressId},'',date_format(curdate(),'%Y%m%d'),date_format(curdate(),'%Y%m%d'),'',#{deliveryPhoneNumber},#{channelId},'',#{auditId},now())
</insert>

<resultMap id="contractDone" type="com.api.model.contract.ContractInsert"> 
	<result property="providerNumber" column="providernumber"/> 
	<result property="conNumber" column="connumber"/> 
	<result property="channelId" column="channelid"/> 
	<result property="productId" column="productid"/> 
	<result property="productName" column="productname"/> 
	<result property="priceAmount" column="priceamount"/> 
	<result property="productQuantity" column="quantity"/> 
	<result property="customerNumber" column="customernumber"/> 
	<result property="customerName" column="customername"/> 
	<result property="phoneNumber" column="phonenumber"/> 
	<result property="channelCustomerNumber" column="channelcustomernumber"/> 
	<result property="productImageUrl" column="productimageurl"/> 
	<result property="productDescription" column="productdescription"/> 
	<result property="deliveryDay" column="deliveryday"/> 
	<result property="deliveryRemark" column="deliveryremark"/> 
	<result property="addressId" column="addressid"/> 
	<result property="zipCode" column="zipcode"/> 
	<result property="baseAddress" column="baseaddress"/> 
	<result property="detailAddress" column="detailaddress"/>
	<result property="invoiceAmount" column="invoiceamount"/> 
	<result property="couponNumber" column="couponnumber"/> 
	<result property="duration" column="duration"/> 
	<result property="customerRemark" column="customerremark"/> 
	<result property="recurringDeliveryYn" column="recurringdeliveryyn"/> 
</resultMap>
<select id="getContractDone" resultMap="contractDone"  parameterType = "ContractInsert" >
select a.providernumber, a.connumber, a.channelid, b.productid, b.productname, c.priceamount, b.quantity, d.customernumber, d.customername, d.phonenumber, d.channelcustomernumber, 
      (select optionvalue2 from providerinformation z where z.providernumber = a.providernumber and z.code = 'SALEPRODUCT' and z.detailcode = a.channelid and z.value1 = b.productid) as productimageurl,
       c.productdescription,
       a.deliveryday, a.deliveryremark, e.addressid, e.zipcode, e.baseaddress, e.detailaddress, 
      (select totalinvoiceamount from invoice h 
       where  h.providernumber = a.providernumber and h.connumber = a.connumber order by h.invoicedate limit 1) as invoiceamount,
       a.customertype as couponnumber, a.duration, a.customerremark, a.recurringdeliveryyn
from   contract a, contractproduct b, product c, customer d, address e
where  a.connumber = #{conNumber}
and    a.connumber = b.connumber
and    b.productid = c.productid
and    a.deliverycustomernumber = d.customernumber
and    a.deliveryaddressid = e.addressid
</select>

<resultMap id="contractList" type="com.api.model.contract.ContractInsert"> 
	<result property="customerNumber" column="customernumber"/> 
	<result property="customerName" column="customername"/> 
	<result property="conNumber" column="connumber"/> 
	<result property="registrationDatetime" column="registrationdatetime"/> 
	<result property="contractState" column="contractstate"/> 
	<result property="duration" column="duration"/> 
	<result property="contractStateName" column="contractstatename"/> 
	<result property="productId" column="productid"/> 
	<result property="productName" column="productname"/> 
	<result property="productQuantity" column="quantity"/> 
	<result property="priceAmount" column="priceamount"/> 
	<result property="invoiceAmount" column="invoiceamount"/> 
	<result property="zipCode" column="zipcode"/>
	<result property="baseAddress" column="baseaddress"/>
	<result property="detailAddress" column="detailaddress"/>
	<result property="deliveryCustomerName" column="deliverycustomername"/> 
	<result property="productImageUrl" column="productimageurl"/> 
	<result property="productDescription" column="productdescription"/> 
	<result property="recurringInvoiceYn" column="recurringinvoiceyn"/> 
	<result property="customerRemark" column="customerremark"/> 
</resultMap>
<select id="getContractList" resultMap="contractList"  parameterType = "ContractInsert" >
select a.customernumber, a.customername, 
       b.connumber, b.registrationdatetime, b.contractstate, b.duration, b.recurringinvoiceyn, b.customerremark, 
      (select codename from codegroupdetail z where z.codegroupid = 'CONTRACTSTATE' and z.code = b.contractstate) as contractstatename,
       c.productid, c.productname, c.quantity, 
       d.priceamount, d.productdescription,
       e.zipcode, e.baseaddress, e.detailaddress, f.customername as deliverycustomername,
      (select g.optionvalue2 from providerinformation g where g.providernumber = a.providernumber and g.code = 'SALEPRODUCT' and g.detailcode = #{channelId} and g.value1 = c.productid) as productimageurl,
      (select totalinvoiceamount from invoice h 
       where  h.providernumber = b.providernumber and h.connumber = b.connumber order by h.invoicedate limit 1) as invoiceamount
from   customer a, contract b, contractproduct c, product d, address e, customer f
where  a.channelid = #{channelId}
and    a.providernumber = #{providerNumber}
and    a.channelcustomernumber = #{channelCustomerNumber}
and    a.customername = #{customerName}
and    a.phonenumber = #{phoneNumber}
and    a.customernumber = b.customernumber
and    b.contractstate != 'UNSETTLED'
and    b.connumber = c.connumber
and    c.productid = d.productid
and    b.deliveryaddressid = e.addressid
and    b.deliverycustomernumber = f.customernumber
order by b.registrationdatetime desc
</select>

<resultMap id="deliveryList" type="com.api.model.contract.ContractInsert"> 
	<result property="deliveryDate" column="deliverydate"/> 
	<result property="deliveryState" column="deliverystate"/> 
	<result property="deliveryStateName" column="deliverystatename"/> 
	<result property="zipCode" column="zipcode"/>
	<result property="baseAddress" column="baseaddress"/>
	<result property="detailAddress" column="detailaddress"/>
	<result property="customerName" column="customername"/> 
	<result property="phoneNumber" column="phonenumber"/> 
</resultMap>
<select id="getDeliveryList" resultMap="deliveryList"  parameterType = "ContractInsert" >
select a.deliverydate, a.deliverystate, 
      (select codename from codegroupdetail z where z.codegroupid = 'DELIVERYSTATE' and z.code = a.deliverystate) as deliverystatename,
       b.zipcode, b.baseaddress, b.detailaddress, c.customername, c.phonenumber
from   deliverydetail a, address b, customer c
where  a.connumber = #{conNumber}
and    a.deliveryaddressid = b.addressid
and    a.deliverycustomernumber = c.customernumber
</select>

<resultMap id="invoiceList" type="com.api.model.contract.ContractInsert"> 
	<result property="invoiceDate" column="invoicedate"/> 
	<result property="invoiceAmount" column="invoiceamount"/> 
	<result property="collectionCloseYn" column="collectioncloseyn"/> 
	<result property="paymentTypeCode" column="paymenttypecode"/> 
</resultMap>
<select id="getInvoiceList" resultMap="invoiceList"  parameterType = "ContractInsert" >
select a.invoicedate, a.totalinvoiceamount as invoiceamount, a.collectioncloseyn,
      (select b.paymenttypecode from paymenthistory b 
       where  b.providernumber = a.providernumber and b.invoicenumber = a.invoicenumber and b.connumber = a.connumber
       order by b.paymentdatetime desc
       limit 1) as paymenttypecode
from   invoice a
where  a.connumber = #{conNumber}
</select>

<insert id="paymentInfoInsert" keyProperty="paymentInformationNumber">
	INSERT 
	INTO   paymentinformation
	       (
	            customernumber
			    , paymentmethod
			    , deliveryaddressid
			    , invoicedeliverytype
			    , invoiceemail
			    , auditid
			    , auditdatetime
			    , paymentday
			    , cardcorporationcode
			    , cardexpirationdate
			    , paymentamount
			    , cardnumber
			  )
	VALUES (
	          
	          #{customerNumber}
	        , #{paymentMethod}
	        , #{deliveryAddressId}
	        , #{invoiceDeliveryType}
	        , #{invoiceEmail}
	        , #{auditId}
	        , NOW()
	        , #{paymentDay}
	        , ''
	        , ''
	        , ''
	        , ''
	       )
	<selectKey resultType="int" keyProperty="paymentInformationNumber" order="AFTER">
       SELECT LAST_INSERT_ID()
       </selectKey>	       
</insert>

<select id="getDeliveryDate" resultType="ContractInsert"  parameterType = "ContractInsert" >
select date_format(curdate(),'%Y%m%d') as effectStartDateTime, date_format(adddate(curdate() + interval #{duration} month, -1), '%Y%m%d') as effectEndDateTime
</select>        

<insert id="insertDeliveryDetail">
insert into deliverydetail (connumber,customernumber,providernumber,invoicenumber,invoicedate,deliverydate,deliverystate,
                            deliverydatetime,deliveryremark,deliverycustomernumber,deliverycompany,deliverychargeamount,deliverychargetype,deliveryaddressid,auditid,auditdatetime)
select a.connumber, a.customernumber, a.providernumber, 0, '', date_format(curdate(),'%Y%m%d') as deliverydate, #{deliveryState}, 
       null, a.deliveryremark, a.deliverycustomernumber, a.deliverycompany, a.deliverychargeamount, a.deliverychargetype, a.deliveryaddressid, a.auditid, now()
from   contract a
where  a.connumber = #{conNumber}
</insert>
	
<select id="getDeliveryDate1" resultType="ContractInsert"  parameterType = "ContractInsert" >
select deliveryDate
from  (select if(date_format(curdate(),'%d')&gt;=cast(#{deliveryDay} as unsigned),concat(date_format(curdate()+interval 1 month,'%Y%m'),if(cast(#{deliveryDay} as unsigned)>9,#{deliveryDay},concat('0',#{deliveryDay}))),
                                                                                 concat(date_format(curdate(),'%Y%m'),if(cast(#{deliveryDay} as unsigned)>9,#{deliveryDay},concat('0',#{deliveryDay})))) as deliverydate) a
</select>        

<select id="getDeliveryCount1" resultType="ContractInsert"  parameterType = "ContractInsert" >
select count(*) as deliveryTotalCount, sum(if(substr(deliverydate,1,6)=date_format(curdate(),'%Y%m'),1,0)) as deliveryCount, min(deliverydate) as deliveryStartDatetime
from  (select deliverydate 
       from  (select date_format(str_to_date(#{deliveryDate},'%Y%m%d') + interval (rownum-1)*#{deliveryMonth} month,'%Y%m%d') as deliverydate
              from  (select @rownum := @rownum + 1 as rownum
		             from   codegroup a, (select @rownum := 0) b
                     limit  #{deliveryCount}) a
<if test='"Y".equals(todayDeliveryYn)'>
              union
              select date_format(curdate(),'%Y%m%d') as deliverydate
</if>       
              ) a
       order by a.deliverydate
       limit #{deliveryTotalCount}) a
</select>        
    
	
<insert id="insertDeliveryDetail1">
insert into deliverydetail (connumber,customernumber,providernumber,invoicenumber,invoicedate,deliverydate,deliverystate,
                            deliverydatetime,deliveryremark,deliverycustomernumber,deliverycompany,deliverychargeamount,deliverychargetype,deliveryaddressid,auditid,auditdatetime)
select b.connumber, b.customernumber, b.providernumber, 0, '', a.deliverydate, #{deliveryState}, 
       null, b.deliveryremark, b.deliverycustomernumber, b.deliverycompany, b.deliverychargeamount, b.deliverychargetype, b.deliveryaddressid, b.auditid, now()
from  (select date_format(str_to_date(#{deliveryDate},'%Y%m%d') + interval (rownum-1)*#{deliveryMonth} month, '%Y%m%d') as deliverydate
       from  (select @rownum := @rownum + 1 as rownum
		      from   codegroup a, (select @rownum := 0) b
              limit  #{deliveryCount}) a
<if test='"Y".equals(todayDeliveryYn)'>
       union
       select date_format(curdate(),'%Y%m%d') as deliverydate
</if>       
      ) a, contract b
where  b.connumber = #{conNumber}
order by a.deliverydate
limit #{deliveryTotalCount}
</insert>	    

<select id="getDeliveryDate2" resultType="ContractInsert"  parameterType = "ContractInsert" >
<![CDATA[
select deliveryDate1, deliveryDate2
from (select if(today<cast(#{deliveryDay1} as unsigned),date1,if(today<cast(#{deliveryDay2} as unsigned),date2,date3)) as deliverydate1,
             if(today<cast(#{deliveryDay1} as unsigned),date2,if(today<cast(#{deliveryDay2} as unsigned),date3,date4)) as deliverydate2
      from  (select date_format(curdate(),'%d') as today, 
                    concat(date_format(curdate(),'%Y%m'),if(cast(#{deliveryDay1} as unsigned)>9,#{deliveryDay1},concat('0',#{deliveryDay1}))) as date1,
                    concat(date_format(curdate(),'%Y%m'),if(cast(#{deliveryDay2} as unsigned)>9,#{deliveryDay2},concat('0',#{deliveryDay2}))) as date2,
                    concat(date_format(curdate()+interval 1 month,'%Y%m'),if(cast(#{deliveryDay1} as unsigned)>9,#{deliveryDay1},concat('0',#{deliveryDay1}))) as date3,
                    concat(date_format(curdate()+interval 1 month,'%Y%m'),if(cast(#{deliveryDay2} as unsigned)>9,#{deliveryDay2},concat('0',#{deliveryDay2}))) as date4) a) a
]]>
</select>        

<select id="getDeliveryCount2" resultType="ContractInsert"  parameterType = "ContractInsert" >
select count(*) as deliveryTotalCount, sum(if(substr(deliverydate,1,6)=date_format(curdate(),'%Y%m'),1,0)) as deliveryCount, min(deliverydate) as deliveryStartDatetime
from  (select deliverydate
       from  (select date_format(str_to_date(#{deliveryDate1},'%Y%m%d') + interval (rownum-1) month,'%Y%m%d') as deliverydate
              from  (select @rownum := @rownum + 1 as rownum
                     from   codegroup a, (select @rownum := 0) b
                     limit  #{deliveryCount}) a
              union 
              select date_format(str_to_date(#{deliveryDate2},'%Y%m%d') + interval (rownum2-1) month,'%Y%m%d') as deliverydate
              from  (select @rownum2 := @rownum2 + 1 as rownum2
                     from   codegroup a, (select @rownum2 := 0) b
                     limit  #{deliveryCount}) a
<if test='"Y".equals(todayDeliveryYn)'>
              union
              select date_format(curdate(),'%Y%m%d') as deliverydate       
</if>              
              ) a
       order by a.deliverydate
       limit #{deliveryTotalCount}) a
</select>

<insert id="insertDeliveryDetail2">
insert into deliverydetail (connumber,customernumber,providernumber,invoicenumber,invoicedate,deliverydate,deliverystate,
                            deliverydatetime,deliveryremark,deliverycustomernumber,deliverycompany,deliverychargeamount,deliverychargetype,deliveryaddressid,auditid,auditdatetime)
select b.connumber, b.customernumber, b.providernumber, 0, '', a.deliverydate, #{deliveryState}, 
       null, b.deliveryremark, b.deliverycustomernumber, b.deliverycompany, b.deliverychargeamount, b.deliverychargetype, b.deliveryaddressid, b.auditid, now()
from  (select date_format(str_to_date(#{deliveryDate1},'%Y%m%d') + interval (rownum-1) month,'%Y%m%d') as deliverydate
       from  (select @rownum := @rownum + 1 as rownum
              from   codegroup a, (select @rownum := 0) b
              limit  #{deliveryCount}) a
       union 
       select date_format(str_to_date(#{deliveryDate2},'%Y%m%d') + interval (rownum2-1) month,'%Y%m%d') as deliverydate
       from  (select @rownum2 := @rownum2 + 1 as rownum2
              from   codegroup a, (select @rownum2 := 0) b
              limit  #{deliveryCount}) a
<if test='"Y".equals(todayDeliveryYn)'>
       union
       select date_format(curdate(),'%Y%m%d') as deliverydate       
</if>              
       ) a, contract b
where  b.connumber = #{conNumber}
order by a.deliverydate
limit #{deliveryTotalCount}
</insert>
   
<select id="getDeliveryDateWeek1" resultType="ContractInsert"  parameterType = "ContractInsert" >
select date_format(adddate(curdate(),if(#{deliveryDay}>weekday(curdate()),#{deliveryDay},#{deliveryDay}+7)-weekday(curdate())),'%Y%m%d') as deliveryDate
</select>

<select id="getDeliveryWeekCount1" resultType="ContractInsert"  parameterType = "ContractInsert" >
select count(*) as deliveryTotalCount, sum(if(substr(deliverydate,1,6)=date_format(curdate(),'%Y%m'),1,0)) as deliveryCount, min(deliverydate) as deliveryStartDatetime
from  (select deliverydate
       from  (select date_format(adddate(#{deliveryDate},(rownum-1)*7),'%Y%m%d') as deliverydate
              from  (select @rownum := @rownum + 1 as rownum
                     from   codegroup a, (select @rownum := 0) b
                     limit  #{deliveryCount}) a
<if test='"Y".equals(todayDeliveryYn)'>
              union 
              select date_format(curdate(),'%Y%m%d') as deliverydate
</if>              
              ) a
       order by a.deliverydate
       limit #{deliveryTotalCount}) a
</select>

<insert id="insertDeliveryDetailWeek1">
insert into deliverydetail (connumber,customernumber,providernumber,invoicenumber,invoicedate,deliverydate,deliverystate,
                            deliverydatetime,deliveryremark,deliverycustomernumber,deliverycompany,deliverychargeamount,deliverychargetype,deliveryaddressid,auditid,auditdatetime)
select b.connumber, b.customernumber, b.providernumber, 0, '', a.deliverydate, #{deliveryState}, 
       null, b.deliveryremark, b.deliverycustomernumber, b.deliverycompany, b.deliverychargeamount, b.deliverychargetype, b.deliveryaddressid, b.auditid, now()
from  (select date_format(adddate(#{deliveryDate},(rownum-1)*7),'%Y%m%d') as deliverydate
       from  (select @rownum := @rownum + 1 as rownum
              from   codegroup a, (select @rownum := 0) b
              limit  #{deliveryCount}) a
<if test='"Y".equals(todayDeliveryYn)'>
       union 
       select date_format(curdate(),'%Y%m%d') as deliverydate
</if>              
       ) a, contract b
where  b.connumber = #{conNumber}
order by a.deliverydate
limit #{deliveryTotalCount}
</insert>

<select id="getDeliveryDateWeek2" resultType="ContractInsert"  parameterType = "ContractInsert" >
select date_format(adddate(curdate(),if(#{deliveryDay1}>weekday(curdate()),#{deliveryDay1},#{deliveryDay1}+7)-weekday(curdate())),'%Y%m%d') as deliveryDate1,
       date_format(adddate(curdate(),if(#{deliveryDay2}>weekday(curdate()),#{deliveryDay2},#{deliveryDay2}+7)-weekday(curdate())),'%Y%m%d') as deliveryDate2
</select>

<select id="getDeliveryWeekCount2" resultType="ContractInsert"  parameterType = "ContractInsert" >
select count(*) as deliveryTotalCount, sum(if(substr(deliverydate,1,6)=date_format(curdate(),'%Y%m'),1,0)) as deliveryCount, min(deliverydate) as deliveryStartDatetime
from  (select deliverydate
       from  (select date_format(adddate(#{deliveryDate1},(rownum-1)*7),'%Y%m%d') as deliverydate
              from  (select @rownum := @rownum + 1 as rownum
                     from   codegroup a, (select @rownum := 0) b
                     limit  #{deliveryCount}) a
              union 
              select date_format(adddate(#{deliveryDate2},(rownum2-1)*7),'%Y%m%d') as deliverydate
              from  (select @rownum2 := @rownum2 + 1 as rownum2
                     from   codegroup a, (select @rownum2 := 0) b
                     limit  #{deliveryCount}) a
<if test='"Y".equals(todayDeliveryYn)'>
              union 
              select date_format(curdate(),'%Y%m%d') as deliverydate
</if>              
              ) a
       order by a.deliverydate
       limit #{deliveryTotalCount}) a
</select>

<insert id="insertDeliveryDetailWeek2">
insert into deliverydetail (connumber,customernumber,providernumber,invoicenumber,invoicedate,deliverydate,deliverystate,
                            deliverydatetime,deliveryremark,deliverycustomernumber,deliverycompany,deliverychargeamount,deliverychargetype,deliveryaddressid,auditid,auditdatetime)
select b.connumber, b.customernumber, b.providernumber, 0, '', a.deliverydate, #{deliveryState}, 
       null, b.deliveryremark, b.deliverycustomernumber, b.deliverycompany, b.deliverychargeamount, b.deliverychargetype, b.deliveryaddressid, b.auditid, now()
from  (select date_format(adddate(#{deliveryDate1},(rownum-1)*7),'%Y%m%d') as deliverydate
       from  (select @rownum := @rownum + 1 as rownum
              from   codegroup a, (select @rownum := 0) b
              limit  #{deliveryCount}) a
       union 
       select date_format(adddate(#{deliveryDate2},(rownum2-1)*7),'%Y%m%d') as deliverydate
       from  (select @rownum2 := @rownum2 + 1 as rownum2
              from   codegroup a, (select @rownum2 := 0) b
              limit  #{deliveryCount}) a
<if test='"Y".equals(todayDeliveryYn)'>
       union 
       select date_format(curdate(),'%Y%m%d') as deliverydate
</if>              
       ) a, contract b
where  b.connumber = #{conNumber}
order by a.deliverydate
limit #{deliveryTotalCount}
</insert>

<insert id="createContract" keyProperty="conNumber">
	INSERT 
	INTO   contract
	       (
	            customernumber
			    , providernumber
			    , paymentinformationnumber
			    , contractstate
			    , subscribedatetime
			    , effectstartdatetime
			    , effectenddatetime
			    , recurringdeliveryyn
			    , deliverycycle
			    , deliverytimes
			    , deliveryremark
			    , deliverystartdatetime
			    , recurringinvoiceyn
			    , invoicecycle
			    , nextinvoicedatetime
			    , auditid
			    , auditdatetime
			    , deliverytotalcount
			    , deliveryremaincount
			    , duration
			    , deliveryday
			    , remark
			    , channelid
			    , channelordernumber
			    , channelproductordernumber
			    , channelcontractnumber
			    , registrationdatetime
			    , deliverycustomernumber
				, deliverytype
			    , deliverycompany
			    , deliveryChargeAmount
			    , deliverychargetype
			    , deliveryaddressid
				, customertype
			    , channelkind
			    , deliverycurrentcount
			    , paymentDay
			    , paymentagreementyn	
			    , contractagreementyn
			    , customerremark
			   )
		VALUES (
				 #{customerNumber}
				, #{providerNumber}
		        , #{paymentInformationNumber}
		        , #{contractState}
		        , DATE_FORMAT(NOW(),'%Y%m%d')
		        , #{effectStartDateTime}
		        , #{effectEndDateTime}
		        , #{recurringDeliveryYn}
		        , #{deliveryCycle}
		        , #{deliveryTimes}
		        , #{deliveryRemark}
		        , #{deliveryStartDatetime}
		        , #{recurringInvoiceYn}
		        , #{invoiceCycle}
		        , date_format(now(),'%Y%m%d')
		        , #{auditId}
		        , NOW()
		        , #{deliveryTotalCount}
		        , #{deliveryRemainCount}
		        , #{duration}
			    , #{deliveryDay}
			    , ''
			    , #{channelId}
			    , nvl(#{channelOrderNumber},'')
			    , ''
			    , null
			    , date_format(now(),'%Y%m%d%H%i%s')
			    , #{deliveryCustomerNumber}
				, 'PARCEL'
			    , #{deliveryCompany}
			    , #{deliveryChargeAmount}
			    , #{deliveryChargeType}
			    , #{deliveryAddressId}
			    , nvl(#{couponNumber},'')			  
			    , ''
			    , 0
			    , #{paymentDay}
			    , #{paymentAgreementYn}
			    , #{contractAgreementYn}
			    , nvl(#{customerRemark},'')
		 )
	<selectKey resultType="int" keyProperty="conNumber" order="AFTER">
       SELECT LAST_INSERT_ID()
       </selectKey>

</insert>

<insert id="createContractProduct">
	INSERT 
	INTO   contractproduct
	       (
	            connumber
			    , productid
			    , producttype
			    , packageid
			    , packagepricereferenceyn
			    , packagevarietyyn
			    , quantity
			    , effectstartdatetime
			    , effectenddatetime
			    , auditid
			    , auditdatetime
			    , productname
				, productoption
				, addproductname
				, productdescription1
				, productdescription2
				, productdescription3
				, productdescription4
				, productdescription5
				, bigissuequantity
	     )
		VALUES (
				 #{conNumber}
				, #{productId}
		        , #{productType}
		        , #{packageId}
		        , #{packagePriceReferenceYn}
		        , #{packageVarietyYn}
		        , #{productQuantity}
		        , #{effectStartDateTime}
		        , #{effectEndDateTime}
		        , #{auditId}
		        , NOW()
		        , (select productname from product a where a.productid = #{productId})
		        , ''
		        , ''
		        , ''
		        , ''
		        , ''
		        , ''
		        , ''
		        , ''
		 )

</insert>

<insert id="createContractDiscount">
insert into contractdiscount (connumber, discountid, discounttype, discountvalue, discountorder, effectstartdatetime, effectenddatetime, auditid, auditdatetime)
values (#{conNumber}, #{discountId}, #{discountType}, #{discountValue}, #{discountOrder}, #{effectStartDateTime}, #{effectEndDateTime}, #{auditId}, now())
</insert>

<select id="getDeliveryChargeAmount" resultType="ContractInsert"  parameterType = "ContractInsert" >
select b.deliverychargeamount as deliveryChargeAmount
from   providerinformation a, deliverychargestandarddata b
where  a.providernumber = #{providerNumber}
and    a.code = 'DELIVERYCOMPANY'
and    a.detailcode = #{channelId}
and    date_format(now(),'%Y%m%d') between a.effectstartdate and a.effectenddate
and    a.providernumber = b.providerNumber
and    a.value1 = b.deliveryCompany
and    date_format(now(),'%Y%m%d') between b.startDate and b.endDate
</select>

<resultMap id="customerByChannelCustomerNumber" type="com.api.model.contract.ContractInsert"> 
	<result property="customerNumber" column="customernumber"/> 
	<result property="customerName" column="customername"/> 
	<result property="phoneNumber" column="phonenumber"/> 
	<result property="email" column="email"/>
	<result property="addressId" column="addressid"/>
	<result property="zipCode" column="zipcode"/>
	<result property="baseAddress" column="baseaddress"/> 
	<result property="detailAddress" column="detailaddress"/> 
</resultMap>
<select id="getCustomerByChannelCustomerNumber" resultMap="customerByChannelCustomerNumber"  parameterType = "ContractInsert" >
select a.customernumber, a.customername, a.phonenumber, a.email, 
       b.addressid, b.zipcode, b.baseaddress, b.detailaddress
from   customer a, address b
where  a.providernumber = #{providerNumber}
and    a.channelcustomernumber = #{channelCustomerNumber}
and    a.deliveryaddressid = b.addressid
</select>

<resultMap id="deliveryDate" type="com.api.model.contract.ContractInsert"> 
	<result property="deliveryDate" column="deliverydate"/> 
	<result property="description" column="description"/> 
</resultMap>
<select id="getDeliveryDateByDeliverySeq" resultMap="deliveryDate"  parameterType = "ContractInsert" >
<![CDATA[
select date_format(deliverydate,'%Y%m%d') as deliverydate, description
from  (select a.providernumber, a.channelid, a.seq, a.deliveryseq, a.deliverydayflag, a.nextmonthyn, a.deliveryweek, a.deliveryday, 
              a.startflag, a.startweek, a.startday, a.endflag, a.endweek, a.endday, a.description,
              b.todate, b.firstdate, b.firstday,
              case when deliverydayflag='DAY' and nextmonthyn='Y' then (case deliveryday when 0 then curdate() + interval 1 month
                                                                                                else nextdate + interval deliveryday-1 day
                                                                        end)
                   when deliverydayflag='DAY' and nextmonthyn='N' then (case deliveryday when 0 then curdate()
                                                                                                else firstdate + interval deliveryday-1 day
                                                                        end)
                   when deliverydayflag='WEEK' and nextmonthyn='Y' then (case when deliveryday<nextday then nextdate + interval (deliveryweek-1)*7+6-nextday+deliveryday+1 day
                                                                              when deliveryday=nextday then nextdate + interval (deliveryweek-1)*7 day
                                                                              when deliveryday>nextday then nextdate + interval (deliveryweek-1)*7+deliveryday-nextday day
                                                                         end)     
                   when deliverydayflag='WEEK' and nextmonthyn='N' then (case when deliveryday<firstday then firstdate + interval (deliveryweek-1)*7+6-firstday+deliveryday+1 day
                                                                              when deliveryday=firstday then firstdate + interval (deliveryweek-1)*7 day
                                                                              when deliveryday>firstday then firstdate + interval (deliveryweek-1)*7+deliveryday-firstday day
                                                                         end)     
              end as deliverydate,
              case startflag when '' then firstdate
                             when 'DAY' then firstdate + interval startday - 1 day
                             when 'WEEK' then (case when startday<firstday then firstdate + interval (startweek-1)*7 + 6-firstday+startday+1 day
                                                    when startday=firstday then firstdate + interval (startweek-1)*7 day
                                                    when startday>firstday then firstdate + interval (startweek-1)*7 + startday-firstday day
                                               end)
              end as startdate,
              case endflag   when '' then lastdate
                             when 'DAY' then (case when (firstdate + interval endday - 1 day) > lastdate then lastdate
                                                                                                         else firstdate + interval endday - 1 day
                                              end)
                             when 'WEEK' then (case when endday<firstday then firstdate + interval (endweek-1)*7 + 6-firstday+endday+1 day
                                                    when endday=firstday then firstdate + interval (endweek-1)*7 day
                                                    when endday>firstday then firstdate + interval (endweek-1)*7 + endday-firstday day
                                               end)
              end as enddate
       from   deliveryday a, 
             (select todate, firstdate, lastdate, dayofweek(firstdate)-1 as firstday, nextdate, dayofweek(nextdate) as nextday
              from  (select todate, str_to_date(concat(date_format(todate,'%Y%m'),'01'),'%Y%m%d') as firstdate, last_day(todate) as lastdate, last_day(todate) + interval 1 day as nextdate
                     from  (select now()+interval if(#{deliverySeq}=1,0,if(#{deliveryCycle}='MONTH',1,2)) month as todate) b) b) b
       where  a.providernumber = #{providerNumber}
       and    a.channelid = #{channelId}
       and    a.deliveryseq = #{deliverySeq}
       and    date_format(now(),'%Y%m%d') between a.effectstartdate and a.effectenddate) a
where  date_format(a.todate,'%Y%m%d') between startdate and enddate
]]>
</select>

<insert id="insertDeliveryDetailByDeliveryDay">
<![CDATA[
insert into deliverydetail (connumber,customernumber,providernumber,invoicenumber,invoicedate,deliverydate,deliverystate,
                            deliverydatetime,deliveryremark,deliverycustomernumber,deliverycompany,deliverychargeamount,deliverychargetype,deliveryaddressid,auditid,auditdatetime)
select b.connumber, b.customernumber, b.providernumber, 0, '', a.deliverydate, #{deliveryState}, 
       null, b.deliveryremark, b.deliverycustomernumber, b.deliverycompany, b.deliverychargeamount, b.deliverychargetype, b.deliveryaddressid, b.auditid, now()
from  (select #{deliveryDate1} as deliverydate
       union
       select date_format(case deliverydayflag when 'DAY' then firstdate + interval deliveryday-1 day
                                               when 'WEEK' then (case when deliveryday<firstday then firstdate + interval (deliveryweek-1)*7+6-firstday+deliveryday+1 day
                                                                      when deliveryday=firstday then firstdate + interval (deliveryweek-1)*7 day
                                                                      when deliveryday>firstday then firstdate + interval (deliveryweek-1)*7+deliveryday-firstday day
                                                                 end)
                          end,'%Y%m%d') as deliverydate
       from   deliveryday a,
             (select firstdate, dayofweek(firstdate)-1 as firstday
              from  (select str_to_date(concat(date_format(now(),'%Y%m'),'01'),'%Y%m%d') + interval rownum*(if(#{deliveryCycle}='MONTH',1,2)) month as firstdate
                     from  (select @rownum := @rownum + 1 as rownum
                            from   codegroup a, (select @rownum := 0) b
                            limit  #{deliveryCount}) b) b) b
       where  a.providernumber = #{providerNumber}
       and    a.channelid = #{channelId}
       and    a.deliveryseq = 2
       and    date_format(now(),'%Y%m%d') between a.effectstartdate and a.effectenddate) a, contract b
where  b.connumber = #{conNumber}
]]>
</insert>

<insert id="insertContractAddition">
insert into contractaddition (connumber, seq, additioncode, additionvalue, productid, auditid, auditdatetime)
select #{conNumber}, nvl(max(seq),0)+1, #{additionCode}, #{additionValue}, nvl(#{productId},''), #{auditId}, now()
from   contractaddition
where  connumber = #{conNumber}
</insert>

<update id="updateCustomerEmail">
update customer set email = #{email}, auditid = #{auditId}, auditdatetime = now()
where  customernumber = #{customerNumber}
</update>


<resultMap id="providerterms" type="com.api.model.contract.ContractInsert"> 
	<result property="providerNumber" column="providernumber"/> 
	<result property="channelId" column="channelid"/> 
	<result property="useAgreement" column="useagreement"/>
	<result property="personalInformation" column="personalinformation"/>
</resultMap>
<select id="getProviderTerms" resultMap="providerterms"  parameterType = "ContractInsert" >
select a.providernumber, a.channelid, a.useagreement, a.personalinformation
from   providerterms a
where  a.providernumber = #{providerNumber}
and    a.channelid = #{channelId}
and    date_format(now(),'%Y%m%d') between a.effectstartdate and a.effectenddate
</select>


<select id="getContractByChannelOrderNumber" resultMap="contractList"  parameterType = "ContractInsert" >
select a.connumber
from   contract a
where  a.providernumber = #{providerNumber}
and    a.channelid = #{channelId}
and    a.channelordernumber = #{channelOrderNumber}
</select>


</mapper>